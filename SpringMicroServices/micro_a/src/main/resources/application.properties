##### Application properties #####
app.name='@project.name@'
app.desc='@project.description@'
app.version='@project.version@'
app.url=http://localhost:8080
app.dev-name=None
app.dev-email=none@none.com

#####  SPRING DOC PROPERTIES #####

springdoc.packages-to-scan=ar.edu.utn.frc.tup.lciii.controllers
springdoc.show-actuator=true
springdoc.swagger-ui.disable-swagger-default-url=true
# swagger-ui custom path
springdoc.swagger-ui.path=/swagger-ui.html

## Spring Data Source ##
spring.datasource.url=jdbc:h2:mem:test;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

## Spring JPA ##
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.show-sql=true
spring.jpa.defer-datasource-initialization=true

spring.config.import=config server:http://localhost:8080
#logging.level.root=TRACE

##RESILIENCE4J Config
##Permite a spring que recoja la info de la salud del microservice
management.endpoint.health.show-details=always
##Establecer que el circuit breaker está funcionando
management.health.circuitbreakers.enabled=true
resilience4j.circuitbreaker.configs.default.register-health-indicator=true

##Como voy a establecer el periodo de ventana de como va a pasar de cerrado a abierto
##Basado en cuenta = COUNT_BASED
##Basado en tiempo = TIME_BASED
resilience4j.circuitbreaker.configs.default.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.configs.default.sliding-window-size=2
##Minimo de llamadas antes de que se corte
resilience4j.circuitbreaker.configs.default.minimum-number-of-calls=5
##cuantas llamadas aceptamos en half open
resilience4j.circuitbreaker.configs.default.permitted-number-of-calls-in-half-open-state=5
##configuramos que las transiciones serán automáticas (de open a half-open)
resilience4j.circuitbreaker.configs.default.automatic-transition-from-open-to-half-open-enabled=true
##Cuando vamos a esperar para ver si ya se solucionó el problema
resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state=5s
##Cuando el 50% de las peticiones hayan fallado se hará la transición
resilience4j.circuitbreaker.configs.default.failure-rate-threshold=50